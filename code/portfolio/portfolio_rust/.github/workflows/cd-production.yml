name: PRODUCTION Build and Deploy

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cargo Cache
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
            ${{ runner.os }}-cargo

      - name: Cargo Target Cache
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
            ${{ runner.os }}-cargo-target
      - uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - uses: jetli/trunk-action@v0.1.0
        with:
          # Optional version of trunk to install(eg. 'v0.8.1', 'latest')
          version: 'latest'

      - name: compile app to wasam ðŸ—³
        shell: bash
        run: trunk build --release

      - uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
